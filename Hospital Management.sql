CREATE TABLE Patients (
  PatientID INT PRIMARY KEY,
  Name VARCHAR(100),
  Age INT,
  Gender VARCHAR(10),
  Contact VARCHAR(15)
);

CREATE TABLE Doctors (
  DoctorID INT PRIMARY KEY,
  Name VARCHAR(100),
  Specialty VARCHAR(50),
  Contact VARCHAR(15)
);

CREATE TABLE Appointments (
  AppointmentID INT PRIMARY KEY,
  PatientID INT,
  DoctorID INT,
  Date DATE,
  Status VARCHAR(20),
  FOREIGN KEY (PatientID) REFERENCES Patients(PatientID),
  FOREIGN KEY (DoctorID) REFERENCES Doctors(DoctorID)
);

CREATE TABLE Bills (
  BillID INT PRIMARY KEY,
  AppointmentID INT,
  Amount DECIMAL(10, 2),
  PaidStatus VARCHAR(10),
  FOREIGN KEY (AppointmentID) REFERENCES Appointments(AppointmentID)
);

CREATE TABLE Departments (
  DepartmentID INT PRIMARY KEY,
  DepartmentName VARCHAR(100)
);

CREATE TABLE Prescriptions (
  PrescriptionID INT PRIMARY KEY,
  AppointmentID INT,
  MedicineName VARCHAR(100),
  Dosage VARCHAR(50),
  Duration VARCHAR(50),
  FOREIGN KEY (AppointmentID) REFERENCES Appointments(AppointmentID)
);


 
INSERT INTO Patients VALUES
(1, 'Rahul Sharma', 28, 'Male', '9876543210'),
(2, 'Anjali Mehta', 34, 'Female', '9012345678'),
(3, 'Sameer Khan', 45, 'Male', '9090909090'),
(4, 'Priya Kulkarni', 29, 'Female', '9123456780'),
(5, 'Manoj Verma', 51, 'Male', '9876512340'),
(6, 'Sneha Joshi', 39, 'Female', '9988776655'),
(7, 'Ravi Iyer', 63, 'Male', '9091919191');

INSERT INTO Doctors VALUES
(1, 'Dr. Arjun Rao', 'Cardiologist', '8888888888'),
(2, 'Dr. Neha Sinha', 'Dermatologist', '9999999999'),
(3, 'Dr. Kiran Desai', 'Neurologist', '8877665544'),
(4, 'Dr. Meenakshi Menon', 'Orthopedic', '7766554433');

INSERT INTO Appointments VALUES
(1, 1, 1, '2025-05-01', 'Completed'),
(2, 2, 2, '2025-05-03', 'Completed'),
(3, 3, 1, '2025-05-05', 'Cancelled'),
(4, 1, 2, '2025-05-08', 'Pending'),
(5, 4, 3, '2025-05-10', 'Completed'),
(6, 5, 1, '2025-05-11', 'Completed'),
(7, 6, 2, '2025-05-12', 'Pending'),
(8, 7, 4, '2025-05-13', 'Completed'),
(9, 4, 2, '2025-05-14', 'Cancelled'),
(10, 6, 3, '2025-05-15', 'Completed');


INSERT INTO Bills VALUES
(1, 1, 1500.00, 'Paid'),
(2, 2, 800.00, 'Paid'),
(3, 3, 0.00, 'N/A'),
(4, 4, 900.00, 'Unpaid'),
(5, 5, 2000.00, 'Paid'),
(6, 6, 1800.00, 'Paid'),
(7, 7, 900.00, 'Unpaid'),
(8, 8, 2200.00, 'Paid'),
(9, 9, 0.00, 'N/A'),
(10, 10, 2500.00, 'Paid');

INSERT INTO Departments VALUES
(1, 'Cardiology'),
(2, 'Dermatology'),
(3, 'Neurology'),
(4, 'Orthopedics');

INSERT INTO Prescriptions VALUES
(1, 1, 'Aspirin', '1 tablet', '5 days'),
(2, 2, 'Cetirizine', '1 tablet', '3 days'),
(3, 5, 'Paracetamol', '2 tablets', '7 days'),
(4, 6, 'Atorvastatin', '1 tablet', '30 days'),
(5, 10, 'Metformin', '500 mg', '15 days');


ALTER TABLE Doctors
ADD DepartmentID INT;

-- Now update existing doctors
UPDATE Doctors SET DepartmentID = 1 WHERE DoctorID = 1; -- Cardiologist
UPDATE Doctors SET DepartmentID = 2 WHERE DoctorID = 2; -- Dermatologist
UPDATE Doctors SET DepartmentID = 3 WHERE DoctorID = 3; -- Neurologist
UPDATE Doctors SET DepartmentID = 4 WHERE DoctorID = 4; -- Orthopedic

-- Add the foreign key
ALTER TABLE Doctors
ADD CONSTRAINT fk_dept
FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID);


---Total revenue generated by each doctor

select
b.Name as doctor_name,
Sum(c.Amount) as Revenue
from dbo.Appointments a
left join dbo.Bills c
on a.AppointmentID = c.AppointmentID
left join dbo.Doctors b
on a.DoctorID = b.DoctorID
where c.PaidStatus = 'Paid'
Group by b.Name

--Number of patients treated by each doctor

select
b.Name,
COUNT(DISTINCT a.PatientID) as patients_treated
from dbo.Appointments a 
left join dbo.Doctors b
on a.DoctorID = b.DoctorID
where a.Status = 'Completed' 
Group By b.Name

--Appointments per day

select 
Date,
COUNT(AppointmentID) as per_day
from dbo.Appointments
Group By date
Order By date

--Revenue collected per day

select 
	a.Date, 
	SUM(b.Amount) as per_day
from dbo.Appointments a
left join dbo.Bills b
on a.AppointmentID = b.AppointmentID
where b.PaidStatus = 'Paid'
Group by a.Date 
Order by a.Date ASC

--Count of cancelled appointments per doctor

select 
	b.Name, 
	Count(*) as cancelled_appointments
from dbo.Appointments a
left join dbo.Doctors b
on a.DoctorID = b.DoctorID
where a.Status = 'Cancelled'
Group by b.Name 


-- List of unpaid bills with patient and appointment info

select 
	b.BillID,
	c.Name,
	a.Date as appointment_date,
	b.Amount,
	b.PaidStatus
from dbo.Appointments a
left join dbo.Bills b
on a.AppointmentID = b.AppointmentID
left join dbo.Patients c
on a.PatientID = c.PatientID
where b.PaidStatus = 'Unpaid'

-- Patients with multiple appointments

select
c.Name,
COUNT(*) as Numberofappointments
from dbo.Appointments a
left join dbo.Patients c
on a.PatientID = c.PatientID
Group By c.Name 
having COUNT(*) > 1


--Find the doctor with the highest total revenue

select name,Revenue
from (
select
a.Name,
Sum(c.Amount) as Revenue,
RANK() OVER (Order BY Sum(c.Amount) DESC) as Rank
from dbo.Doctors a
left join dbo.Appointments b
on a.DoctorID = b.DoctorID
left join dbo.Bills c
on b.AppointmentID = c.AppointmentID
where c.PaidStatus = 'Paid'   
Group BY a.Name
)t where Rank = 1

--Create a view showing patient, doctor, appointment date, and bill info

CREATE VIEW Patient_Info As(
select
b.Name as patient_Name,
a.Date as Appointment_Date,
a.Status as Appointment_Status,
b.Gender as patient_Gender,
b.Age as patient_Age,
c.Name as Doctor_Name,
d.Amount,
d.PaidStatus
from dbo.Appointments a
left join dbo.Patients b
on a.PatientID = b.PatientID
left join dbo.Doctors c
on a.DoctorID = c.DoctorID
left join dbo.Bills d
on a.AppointmentID = d.AppointmentID
)

select * from dbo.Patient_Info where PaidStatus = 'Unpaid'



--List patients who only had cancelled appointments

select
a.Name
from dbo.Patients a
where not exists (
select 1
from dbo.Appointments b
where a.PatientID = b.PatientID and
 b.Status !=  'Cancelled')



 -- Show all doctors and how many unique patients they have treated (including 0)
 select
a.Name as Doctors,
COUNT(DISTINCT b.PatientID) as Treated
from dbo.Doctors a
left join dbo.Appointments b 
on a.DoctorID = b.DoctorID 
Where b.Status = 'Completed'
Group By a.Name

--Use CASE to categorize patients by age group

select 
Name,
Case 
     when Age < 18 then 'Child'
	 when Age between 18 and 40 Then 'ADULT'
	 when Age between 41 and 60  then 'Middle Age'
	 else 'Senior'
end AS age_group
from dbo.Patients

-- Find the most recent appointment for each patient

select
*
from (
select 
a.*,
ROW_NUMBER() OVER(PARTITION BY a.PatientID ORDER BY a.Date DESC) AS Appointment_date
from  dbo.Appointments a
)t where Appointment_date = 1 

--List all doctors along with their department names

select
a.Name,
b.DepartmentName 
from dbo.Doctors a
left join dbo.Departments b
on a.DepartmentID = b.DepartmentID

--Show all prescriptions given by each doctor

select
c.Name as doctor_name,
dd.Name AS patient,
b.Date As Appointment_date,
a.MedicineName,
a.Dosage,
a.Duration
from dbo.Prescriptions a
left join dbo.Appointments b
on a.AppointmentID = b.AppointmentID 
left join dbo.Doctors c
on b.DoctorID = c.DoctorID 
left join dbo.Patients dd
on b.PatientID = dd.PatientID 

--Top 3 most prescribed medicines

select TOP 3
MedicineName,
COUNT(*) as time_prescribed
from dbo.Prescriptions
Group By MedicineName
Order By time_prescribed DESC



--Total revenue generated by each department

select
	a.DepartmentName,
	SUM(cc.Amount) as revenue
from dbo.Departments a
left join dbo.Doctors b on a.DepartmentID = b.DepartmentID
left join dbo.Appointments c on b.DoctorID = c.DoctorID
left join dbo.Bills cc on c.AppointmentID = cc.AppointmentID
WHERE cc.PaidStatus = 'Paid'
Group BY a.DepartmentName;



--Create a view of full appointment details including prescription



CREATE VIEW Patient_Info_and_prescription As(
select
b.Name as patient_Name,
a.Date as Appointment_Date,
a.Status as Appointment_Status,
b.Gender as patient_Gender,
b.Age as patient_Age,
c.Name as Doctor_Name,
d.Amount,
d.PaidStatus,
COALESCE(cc.MedicineName,'') as MedicineName,
COALESCE(cc.Dosage,'') as Dosage,
COALESCE(cc.Duration,'') as Duration
from dbo.Appointments a
left join dbo.Patients b
on a.PatientID = b.PatientID
left join dbo.Doctors c
on a.DoctorID = c.DoctorID
left join dbo.Bills d
on a.AppointmentID = d.AppointmentID
left join dbo.Prescriptions cc
on a.AppointmentID = cc.AppointmentID

)

